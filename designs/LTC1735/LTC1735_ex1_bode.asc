Version 4
SHEET 1 5776 3564
WIRE 704 832 512 832
WIRE 880 832 704 832
WIRE 992 832 880 832
WIRE 1600 832 992 832
WIRE 512 864 512 832
WIRE 1408 864 1280 864
WIRE 1520 864 1408 864
WIRE 704 880 704 832
WIRE 1520 880 1520 864
WIRE 992 896 992 832
WIRE 1136 896 1136 880
WIRE 1280 896 1280 864
WIRE 1408 896 1408 864
WIRE 1520 960 1520 944
WIRE 1600 960 1600 832
WIRE 512 976 512 944
WIRE 704 976 704 944
WIRE 912 976 896 976
WIRE 1408 976 1408 960
WIRE 1408 976 1360 976
WIRE 1552 1040 1360 1040
WIRE 1408 1056 1408 976
WIRE 800 1104 720 1104
WIRE 880 1104 864 1104
WIRE 912 1104 880 1104
WIRE 1408 1136 1408 1120
WIRE 1408 1136 1360 1136
WIRE 1600 1136 1600 1056
WIRE 1600 1136 1408 1136
WIRE 1680 1136 1600 1136
WIRE 1744 1136 1680 1136
WIRE 1840 1136 1744 1136
WIRE 2000 1136 1920 1136
WIRE 2016 1136 2000 1136
WIRE 2112 1136 2096 1136
WIRE 2192 1136 2112 1136
WIRE 2400 1136 2192 1136
WIRE 2608 1136 2400 1136
WIRE 2784 1136 2608 1136
WIRE 1600 1152 1600 1136
WIRE 1744 1168 1744 1136
WIRE 2400 1168 2400 1136
WIRE 2608 1168 2608 1136
WIRE 2784 1168 2784 1136
WIRE 2192 1184 2192 1136
WIRE 2192 1200 2192 1184
WIRE 672 1232 544 1232
WIRE 880 1232 672 1232
WIRE 912 1232 880 1232
WIRE 1552 1232 1360 1232
WIRE 672 1248 672 1232
WIRE 1600 1264 1600 1248
WIRE 1744 1264 1744 1232
WIRE 2400 1280 2400 1232
WIRE 2608 1280 2608 1248
WIRE 2784 1280 2784 1248
WIRE 544 1296 544 1232
WIRE 2192 1296 2192 1280
WIRE 2000 1312 2000 1136
WIRE 2000 1312 1360 1312
WIRE 672 1328 672 1312
WIRE 2192 1328 2192 1296
WIRE 864 1360 832 1360
WIRE 912 1360 864 1360
WIRE 832 1376 832 1360
WIRE 2112 1376 2112 1136
WIRE 2112 1376 1360 1376
WIRE 544 1424 544 1360
WIRE 672 1424 672 1408
WIRE 1408 1440 1360 1440
WIRE 2192 1440 2192 1408
WIRE 2192 1440 1408 1440
WIRE 832 1456 832 1440
WIRE 2192 1504 2192 1440
WIRE 1024 1536 1024 1504
WIRE 1248 1536 1248 1504
WIRE 2192 1616 2192 1584
FLAG 1024 1536 0
FLAG 1248 1536 0
FLAG 672 1424 0
FLAG 720 1104 0
FLAG 2192 1616 0
FLAG 2608 1280 0
FLAG 2400 1280 0
FLAG 1600 1264 0
FLAG 832 1456 0
FLAG 1520 960 0
FLAG 1744 1264 0
FLAG 880 1232 C
FLAG 864 1360 OSC
FLAG 896 976 0
FLAG 1680 1136 D
FLAG 544 1424 0
FLAG 2192 1184 B
FLAG 2192 1296 A
FLAG 2784 1280 0
FLAG 880 1104 SS
FLAG 1408 1440 FB
FLAG 512 976 0
FLAG 704 976 0
FLAG 880 832 IN
SYMBOL RES 656 1312 R0
WINDOW 0 44 41 Left 2
WINDOW 3 44 67 Left 2
SYMATTR InstName R1
SYMATTR Value {R1}
SYMBOL res 2176 1312 R0
WINDOW 0 44 44 Left 2
WINDOW 3 41 73 Left 2
SYMATTR InstName Ra
SYMATTR Value {Ra}
SYMBOL res 2176 1488 R0
WINDOW 0 53 41 Left 2
WINDOW 3 45 70 Left 2
SYMATTR InstName Rb
SYMATTR Value {Rb}
SYMBOL cap 656 1248 R0
WINDOW 0 39 22 Left 2
WINDOW 3 39 52 Left 2
SYMATTR InstName C1
SYMATTR Value {C1}
SYMBOL cap 816 1376 R0
SYMATTR InstName Cosc
SYMATTR Value 30.1p
SYMBOL cap 864 1088 R90
WINDOW 0 0 32 VBottom 2
WINDOW 3 32 32 VTop 2
SYMATTR InstName Css
SYMATTR Value 800p
SYMBOL polcap 2384 1168 R0
WINDOW 0 52 6 Left 2
WINDOW 3 51 30 Left 2
WINDOW 39 52 55 Left 2
SYMATTR InstName Cout
SYMATTR Value {Cout}
SYMATTR SpiceLine Rser={Resr}
SYMBOL ind 1824 1152 R270
WINDOW 0 108 58 VTop 2
WINDOW 3 104 59 VBottom 2
WINDOW 39 68 64 VBottom 2
SYMATTR InstName L
SYMATTR Value {L}
SYMATTR SpiceLine Rser={Rdcr}
SYMBOL NMOS 1552 960 R0
SYMATTR InstName Q1
SYMATTR Value Si4410DY
SYMBOL nmos 1552 1152 R0
SYMATTR InstName Q2
SYMATTR Value Si4410DY
SYMBOL cap 1504 880 R0
SYMATTR InstName C3
SYMATTR Value 4.7µ
SYMBOL cap 1392 1056 R0
SYMATTR InstName C4
SYMATTR Value .22µ
SYMBOL schottky 1392 896 R0
SYMATTR InstName D1
SYMATTR Value 1N5818
SYMBOL schottky 1728 1232 M180
WINDOW 0 24 72 Left 2
WINDOW 3 24 0 Left 2
SYMATTR InstName D2
SYMATTR Value 1N5818
SYMBOL POWERPRODUCTS\\LTC1735 1136 1168 R0
SYMATTR InstName U1
SYMBOL res 2592 1152 R0
WINDOW 0 47 47 Left 2
WINDOW 3 46 74 Left 2
SYMATTR InstName Rload
SYMATTR Value {Rload}
SYMBOL cap 528 1296 R0
WINDOW 0 44 20 Left 2
WINDOW 3 41 50 Left 2
SYMATTR InstName C2
SYMATTR Value {C2}
SYMBOL VOLTAGE 2192 1296 R180
WINDOW 0 -81 107 Left 2
WINDOW 3 -544 -107 Left 2
SYMATTR InstName Vsine
SYMATTR Value SINE(0 {if(freq<10k,50m,5m)} {freq})
SYMBOL current 2784 1168 R0
WINDOW 3 -242 185 Left 2
WINDOW 123 0 0 Left 2
WINDOW 39 0 0 Left 2
WINDOW 0 44 41 Left 2
SYMATTR Value PWL(0 0 2.0m 0 2.001m {Istep})
SYMATTR InstName Istep
SYMBOL res 2000 1120 M90
WINDOW 0 -40 54 VBottom 2
WINDOW 3 -35 58 VTop 2
SYMATTR InstName Rsns
SYMATTR Value {Rsns}
SYMBOL VOLTAGE 512 848 R0
WINDOW 0 44 35 Left 2
WINDOW 3 40 64 Left 2
WINDOW 123 0 0 Left 2
WINDOW 39 40 96 Left 2
SYMATTR InstName Vin
SYMATTR Value {Vin}
SYMATTR SpiceLine Rser=100m
SYMBOL polcap 688 880 R0
WINDOW 0 52 6 Left 2
WINDOW 3 51 30 Left 2
WINDOW 39 52 55 Left 2
SYMATTR InstName Cin
SYMATTR Value 40µ
SYMATTR SpiceLine Rser=10m
TEXT 3000 104 Left 2 !;.tran 0 {if(freq<10k,2.2m+10/freq,3.2m} startup
TEXT 2976 72 Left 2 ;Transient response from time = 0
TEXT 2976 160 Left 2 ;Transient response from time = 2.2ms (after the load step has settled)
TEXT 3008 200 Left 2 !.tran 0 {if(freq<10k,2.2m+10/freq,3.2m} 2.2m startup
TEXT 2976 1288 Left 2 !.save V(a) V(b) V(c) V(d) I(L)\n.option plotwinsize=0  ; turn off waveform compression\n.option option_angle=degrees\n.option nomarch=1 ; do not generate plots until done\n \n.measure Aavg avg V(a)\n.measure Bavg avg V(b)\n.measure Cavg avg V(c)\n.measure Davg avg V(d)\n.measure Are avg  (V(a)-Aavg)*cos(360*time*Freq)\n.measure Aim avg -(V(a)-Aavg)*sin(360*time*Freq)\n.measure Bre avg  (V(b)-Bavg)*cos(360*time*Freq)\n.measure Bim avg -(V(b)-Bavg)*sin(360*time*Freq)\n.measure Cre avg  (V(c)-Cavg)*cos(360*time*Freq)\n.measure Cim avg -(V(c)-Cavg)*sin(360*time*Freq)\n.measure Dre avg  (V(d)-Davg)*cos(360*time*Freq)\n.measure Dim avg -(V(d)-Davg)*sin(360*time*Freq)\n.measure Gain_dB param 20*log10(hypot(Bre,Bim) / hypot(Are,Aim))\n.measure Phase param mod(atan2(Bim, Bre) - atan2(Aim, Are)+180,360)-180\n.measure Kco_dB param 20*log10(hypot(Bre,Bim) / hypot(Cre,Cim))\n.measure Kco_Phase param mod(atan2(Bim, Bre) - atan2(Cim, Cre)+180,360)-180\n.measure Kcomp_dB param 20*log10(hypot(Cre,Cim) / hypot(Are,Aim))\n.measure Kcomp_Phase param mod(atan2(Cim, Cre) - atan2(Aim, Are)+180,360)-180\n.measure Kpwr_dB param 20*log10(hypot(Bre,Bim) / hypot(Dre,Dim))\n.measure Kpwr_Phase param mod(atan2(Bim, Bre) - atan2(Dim, Dre)+180,360)-180
TEXT 2624 848 Left 2 !;.step param freq list  1k 2k 3k 4k 5k 7k 10k 20k 30k 50k 70k 100k 200k 300k 500k 700k 1Meg
TEXT 2608 904 Left 2 ;Detailed response (the 100Hz and 300Hz measurements take a long time) (1 hour, 28 minutes)
TEXT 2624 768 Left 2 !.step param freq list  1k 3k 10k 30k 100k 300k 1Meg
TEXT 1376 1344 Left 2 ;Inductor DCR sensing is not supported
TEXT 744 1520 Left 2 ;fsw = 500kHz\nfor Cosc = 30.1pF
TEXT 2608 736 Left 2 ;Use this set of frequencies to get the coarse response reasonably quickly (11 minutes)
TEXT 2592 688 Left 3 ;Frequency sweep:
TEXT 2608 816 Left 2 ;Use this set of frequencies for the detailed response (excluding the lowest frequencies) (33 minutes)
TEXT 2624 936 Left 2 !;.step param freq list 100 300 1k 2k 3k 4k 5k 7k 10k 20k 30k 50k 70k 100k 200k 300k 500k 700k 1Meg
TEXT 3008 312 Left 2 ;To view the current load step transient response;\na) Comment out the .step command\nb) Change the .tran command to keep all the data\nc) (Optional) Change the sinusoid amplitude from 5m to 5p\nd) Create a plot with three panes containing V(b), V(c), and I(L)\ne) (Optional) comment out the nomarch option to see the plot\n    waveforms updating during simulation\nf) (Optional) Comment out the .save command to view more signals
TEXT 2144 0 Left 2 !.param\n+ freq = 30k\n+ Vin = 12\n+ Vout = 3.3\n+ Iout = 6\n+ Irload = 1     ; Resistive load current\n+ Istep = (Iout-Irload)   ; Load step\n+ Rload = (Vout/Irload)\n+ L = 2.2u   ; IHLP-2525CZ-01\n+ Rdcr = 20m\n+ Rsns = 7m\n+ Vref = 0.8\n+ Ra = 3.57k    ; Nearest 1% resistors for Vout = 3.3V\n+ Rb = 1.15k\n+ R1 = 33k       ;  per LTC1735 Figure 1\n+ C1 = 330p\n+ C2 = 100p\n+ Cout = 150u\n+ Resr = 18m
TEXT 2952 -80 Left 3 ;Analysis:
TEXT 528 -64 Left 4 ;LTC1735 Current-mode Synchronous Buck Controller Example #1
TEXT 592 112 Left 3 ;The example power supply converts 12V to 3.3V @ 6A. The LTC1735 was \nselected due to its use in [1] to describe current-mode compensation.
TEXT 568 352 Left 3 ;[1] J. Seago, "AN76: Opti-loop architecture reduces output capacitance and\n     improves transient response", Linear Technology, 1999.\n[2] Linear Technology, "DC247: LTC1765 demonstration board", 1999.
TEXT 568 288 Left 3 ;References:
TEXT 744 -8 Left 3 ;6/15/2013 D. W. Hawkins (dwh@ovro.caltech.edu)
TEXT 2136 -64 Left 3 ;Parameters:
TEXT 2976 -24 Left 2 ;Use CTRL+right-mouse-click to (un)comment\none of these .tran commands
TEXT 544 752 Left 2 ;For 3.3V @ 6A, 80% efficiency, the 12V load is 2A.\nIf Rin = 100mOhm, then Vin will drop by 200mV.
TEXT 2976 1192 Left 3 ;Gain and Phase Calculations:
TEXT 2976 264 Left 3 ;Note:
TEXT 2904 688 Left 2 ;(Processing times are for a quad-core HP Elitebook)
LINE Normal 2752 1248 2704 1328
LINE Normal 2240 1264 2336 1376
RECTANGLE Normal 3968 2024 2928 1104
RECTANGLE Normal 1904 240 488 -120
RECTANGLE Normal 1904 512 488 -120
RECTANGLE Normal 2816 560 2064 -136
RECTANGLE Normal 3888 584 2928 -128
RECTANGLE Normal 4000 2112 432 -184
RECTANGLE Normal 3888 992 2560 648
